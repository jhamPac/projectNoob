/**
 * This combination of mixins pulled from: https://gist.github.com/peschee/5734414
 * Note: I have modified the naming convention to my personal taste.
 *
 * This also includes the respondto mixin to allow multiple media queries. Use it like:
 *
 * .searchform { padding-left:10%; @include respondto(phone, tablet) { padding-left:0 }; }
 */

@mixin respondto($media...) {
    @each $mediatype in $media {
        @include respond-to($mediatype) {@content}
    }
}

/**
 * Responsive mixin. The media breakpoints are as defined
 * in the twitter bootstrap framework:
 *
 * - phone
 * - tablet
 * - desktop
 * - large
 *
 * Additional parameters for tagetting retina and non-retina
 * devices
 *
 * - retina
 * - non-retina
 *
 * Moreover, a specific value in px can be passed which is
 * used to generate a max-width media query.
 */
@mixin respond-to($media) {
    /* Landscape phones and down */
    @if $media == phone {
        @media (max-width: 480px) { @content; }
    }
    /* Landscape phone to portrait tablet */
    @else if $media == tablet {
        @media (max-width: 991px) { @content; }
    }
    /* Portrait tablet to landscape and desktop */
    @else if $media == desktop {
        @media (min-width: 992px) and (max-width: 1199px) { @content; }
    }
    /* Large desktop */
    @else if $media == large {
        @media (min-width: 1200px) { @content; }
    }
    // Non-Retina
    @else if $media == non-retina {
        @media screen and (-webkit-max-device-pixel-ratio: 1) { @content; }
    }
    // Retina Only
    @else if $media == retina {
        @media screen and (-webkit-min-device-pixel-ratio: 2) { @content; }
    }
    // Specific max width
    @else {
        @media only screen and (max-width: #{$media}px) { @content; }
    }
}